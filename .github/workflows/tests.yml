name: tests

on: [push]


jobs:
  build:
    name: Run Tests
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        ruby: ["3.1.0"]
        node: ["18.13.0"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: >
            ${{ runner.os }}-${{ matrix.ruby }}-gems-${{ hashFiles('Gemfile.lock') }}

      - name: Setup Ruby/Rails
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}


      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: >
            ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install npm dependencies
        run: |
          yarn install

      - name: Install gem dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4

      - name: Run lint
        env:
          RAILS_ENV: test
        run: |
          bundle exec rubocop

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/todo_list_hotwire_test
        run: |
          bundle exec rails db:create
          bundle exec rails test:all
